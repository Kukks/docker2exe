NAME = {{.Name}}
OUTPUT = {{.Output}}
MODULE = {{.Module}}
IMAGE = {{.Image}}
{{- if .Embed}}
SOURCES = go.sum $(wildcard *.go) image.tar.gz
{{- else}}
SOURCES = go.sum $(wildcard *.go)
{{- end}}
TARGETS ={{range .Targets}} {{.}}{{end}}
DOCKER ?= docker

# Detect Windows
ifeq ($(OS),Windows_NT)
    # PowerShell command wrapper
    SET_ENV = powershell -Command "$$env:GOOS='$(1)'; $$env:GOARCH='$(2)'; 
    MKDIR = powershell -Command "New-Item -ItemType Directory -Force -Path"
else
    # Unix command wrapper
    SET_ENV = GOOS=$(1) GOARCH=$(2)
    MKDIR = mkdir -p
endif

os = $(word 1, $(subst /, ,$@))
arch = $(word 2, $(subst /, ,$@))

.PHONY: all
all: $(TARGETS)

go.mod:
	go mod init $(MODULE)

go.sum: go.mod
	go get

image.tar.gz:
	$(DOCKER) save $(IMAGE) | gzip > image.tar.gz

$(OUTPUT):
	$(MKDIR) $(OUTPUT)

$(TARGETS): $(SOURCES) $(OUTPUT)
	$(call SET_ENV,$(os),$(arch)) go build -o "$(OUTPUT)/$(NAME)-$(os)-$(arch)"
